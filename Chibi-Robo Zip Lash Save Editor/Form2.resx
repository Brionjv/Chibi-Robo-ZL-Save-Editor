<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gDlsbADMYWMDYA4bGwBz2NgAmMPGBsAcNjYA5rCxATCHjQ2AOWxsAMxhYwNgDhsbAHPY2ACYw8YGwBw2
        NgDmsLEBMIeNDYA5bGwAzGFjA2AOGxsAc9jYAJjDxgbAHDY2AOawsQEwh40NgDlsbADMYWMDYA4bGwBz
        2NgAmMPGBsAcNjYA5rCxATCHjQ2AOWxsAMxhYwNgDhsbAHPY2ACYw8YGwBw2NgDmsLEBMIeNDYA5bGwA
        zGFjA2AOGxsAc9jYAJjDxgbAHDY2AOawsQEwh40NgDlsbADMYWMDYA4bGwBz2NgAmMPGBsAcNjYA5rCx
        ATCHjQ2AOWxsAMxhYwNgDhsbAHPY2ACYw8YGwBw2NgDmsLEBMIeNDYA5bGwAzGFjA2AOGxsAc9jYAJjD
        xgbAHDY2AOawsQEwh40NgDlsbADMYWMDYA4bGwBz2NgAmMPGBsAcNjYA5rCxATCHjQ2AOWxsAMxhYwNg
        DhsbAHPY2ACYw8YGwBw2NgDmsLEBMIeNDYA5bGwAzGFjA2AOGxsAc9jYAJjDxgbAHDY2AOawsQEwh40N
        gDlsbADMYWMDYA4bGwBz2NgAmMPGBsAcNjYA5rCxATCHjQ2AOWxsAMxhYwNgDhsbAHPY2ACYw8YGwBw2
        NgDmsLEBMIeNDYA5bGwAzGFjA2AOGxsAc9jYAJjDxgbAHDY2AOawsQEwh40NgDlsbADMYWMDYA4bGwBz
        2NgAmMPGBsAcNjYA5rCxATCHjQ2AOWxsAMxhYwNgDhsbAHPY2ACYw8YGwBw2NgDmsLEBMIeNDYA5bGwA
        zGFjA2AOGxsAc9jYAJjDxgbAHDY2AOawsQEwh40NgDlsbADMYWMDYA4bGwBz2NgAmMPGBsAcNjYA5rCx
        ATCHjQ2AOWxsAMxhYwNgDhsbAHPY2ACYw8YGwBw2NgDmsLEBMIeNDYA5bGwAzGFjA2AOGxsAc9jYAJjD
        xgbAHDY2AOawsQEwh40NgDlsbADMYWMDYA4bGwBz2NgAmMPGBsAcNjYA5rCxATCHjQ2AOWxsAMxhYwNg
        DhsbAHPY2ACYw8YGwBw2NgDmsLEBMIeNDYA5bGwAzGFjA2AOGxsAc9jYAJjDxgbAHDY2AOawsQEwh40N
        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
        rkJggg==
</value>
  </data>
</root>